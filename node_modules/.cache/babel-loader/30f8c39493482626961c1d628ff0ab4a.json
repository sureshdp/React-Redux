{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/ManageCoursePage.js\";\nimport React, { useState, useEffect } from \"react\"; //import { Prompt } from \"react-router-dom\";\n\nimport CourseForm from \"./components/CourseForm\";\nimport courseStore from \"./stores/courseStore\";\nimport * as courseActions from \"./actions/courseActions\";\nimport { toast } from \"react-toastify\";\n\nconst ManageCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [courses, setCourses] = useState(courseStore.getCourse());\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    category: \"\",\n    authorId: null\n  });\n  useEffect(() => {\n    courseStore.addChangeListner(onChange);\n    const slug = props.match.params.slug; // from the path '/couses/:slug'\n\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n\n    return () => courseStore.removeChangeListner(onChange);\n  }, [course.length, props.match.params.slug]);\n\n  function onChange() {\n    setCourses(courseStore.getCourse());\n  }\n\n  function handleChange(event) {\n    setCourse({ ...course,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is Required\";\n    if (!course.authorId) _errors.authorId = \"Author is Required\";\n    if (!course.category) _errors.category = \"Category is Required\";\n    setErrors(_errors); //Form is valid if errors object has no properties\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseActions.SaveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Saved...\");\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    errors: errors,\n    course: course,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage; //      <Prompt when={true} message=\"Are you sure to Leave ?\" />\n//<Prompt when={true} message=\"Are you sure you want to leave ?\" />","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/ManageCoursePage.js"],"names":["React","useState","useEffect","CourseForm","courseStore","courseActions","toast","ManageCoursePage","props","errors","setErrors","courses","setCourses","getCourse","course","setCourse","id","slug","title","category","authorId","addChangeListner","onChange","match","params","length","loadCourses","getCourseBySlug","removeChangeListner","handleChange","event","target","name","value","formIsValid","_errors","Object","keys","handleSubmit","preventDefault","SaveCourse","then","history","push","success"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n//import { Prompt } from \"react-router-dom\";\nimport CourseForm from \"./components/CourseForm\";\nimport courseStore from \"./stores/courseStore\";\nimport * as courseActions from \"./actions/courseActions\";\n\nimport { toast } from \"react-toastify\";\nconst ManageCoursePage = (props) => {\n  const [errors, setErrors] = useState({});\n  const [courses,setCourses] = useState(courseStore.getCourse())\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    category: \"\",\n    authorId: null,\n  });\n  useEffect(() => {\n    courseStore.addChangeListner(onChange)\n    const slug = props.match.params.slug; // from the path '/couses/:slug'\n    if (courses.length === 0) {\n      courseActions.loadCourses()\n    }else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n    return() => courseStore.removeChangeListner(onChange)\n  }, [course.length,props.match.params.slug]);\n  function onChange(){\n    setCourses(courseStore.getCourse())\n  }\n  function handleChange(event) {\n    setCourse({\n      ...course,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is Required\";\n    if (!course.authorId) _errors.authorId = \"Author is Required\";\n    if (!course.category) _errors.category = \"Category is Required\";\n    setErrors(_errors);\n    //Form is valid if errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseActions.SaveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Saved...\");\n    });\n  }\n  return (\n    <>\n      <h2>Manage Course</h2>\n      <CourseForm\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManageCoursePage;\n//      <Prompt when={true} message=\"Are you sure to Leave ?\" />\n//<Prompt when={true} message=\"Are you sure you want to leave ?\" />\n"]},"metadata":{},"sourceType":"module"}