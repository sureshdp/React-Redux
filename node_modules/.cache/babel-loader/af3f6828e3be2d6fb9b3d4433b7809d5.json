{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/common/coursePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport CourseList from \"../components/CourseList\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses } from \"../actions/courseActions\";\nimport ReactTable from \"react-table\";\n\nfunction CoursePage() {\n  const [courses, setCourses] = useState(courseStore.getCourse());\n  useEffect(() => {\n    courseStore.addChangeListner(onChange);\n    if (courseStore.getCourse().length === 0) loadCourses();\n    return () => courseStore.removeChangeListner(onChange); //cleanup on unmount\n  }, []);\n\n  function onChange() {\n    setCourses(courseStore.getCourse());\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Courses\"), React.createElement(Link, {\n    className: \"btn btn-primary\",\n    to: \"/course\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add Course\"), React.createElement(CourseList, {\n    courses: courses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(ReactTable, {\n    data: this.state.data // should default to []\n    ,\n    pages: this.state.pages // should default to -1 (which means we don't know how many pages we have)\n    ,\n    loading: this.state.loading,\n    manual: true // informs React Table that you'll be handling sorting and pagination server-side\n    ,\n    onFetchData: (state, instance) => {\n      // show the loading overlay\n      this.setState({\n        loading: true\n      }); // fetch your data\n\n      Axios.post(\"mysite.com/data\", {\n        page: state.page,\n        pageSize: state.pageSize,\n        sorted: state.sorted,\n        filtered: state.filtered\n      }).then(res => {\n        // Update react-table\n        this.setState({\n          data: res.data.rows,\n          pages: res.data.pages,\n          loading: false\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}\n\nexport default CoursePage;","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/common/coursePage.js"],"names":["React","useState","useEffect","courseStore","CourseList","Link","loadCourses","ReactTable","CoursePage","courses","setCourses","getCourse","addChangeListner","onChange","length","removeChangeListner","state","data","pages","loading","instance","setState","Axios","post","page","pageSize","sorted","filtered","then","res","rows"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACE,WAAW,CAACQ,SAAZ,EAAD,CAAtC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACS,gBAAZ,CAA6BC,QAA7B;AACA,QAAIV,WAAW,CAACQ,SAAZ,GAAwBG,MAAxB,KAAmC,CAAvC,EAA0CR,WAAW;AACrD,WAAO,MAAMH,WAAW,CAACY,mBAAZ,CAAgCF,QAAhC,CAAb,CAHc,CAG0C;AACzD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASA,QAAT,GAAoB;AAClBH,IAAAA,UAAU,CAACP,WAAW,CAACQ,SAAZ,EAAD,CAAV;AACD;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,EAAE,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAKE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEF,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,KAAKO,KAAL,CAAWC,IADnB,CACyB;AADzB;AAEE,IAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB,CAE2B;AAF3B;AAGE,IAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAHtB;AAIE,IAAA,MAAM,MAJR,CAIS;AAJT;AAKE,IAAA,WAAW,EAAE,CAACH,KAAD,EAAQI,QAAR,KAAqB;AAChC;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd,EAFgC,CAGhC;;AACAG,MAAAA,KAAK,CAACC,IAAN,CAAW,iBAAX,EAA8B;AAC5BC,QAAAA,IAAI,EAAER,KAAK,CAACQ,IADgB;AAE5BC,QAAAA,QAAQ,EAAET,KAAK,CAACS,QAFY;AAG5BC,QAAAA,MAAM,EAAEV,KAAK,CAACU,MAHc;AAI5BC,QAAAA,QAAQ,EAAEX,KAAK,CAACW;AAJY,OAA9B,EAKGC,IALH,CAKSC,GAAD,IAAS;AACf;AACA,aAAKR,QAAL,CAAc;AACZJ,UAAAA,IAAI,EAAEY,GAAG,CAACZ,IAAJ,CAASa,IADH;AAEZZ,UAAAA,KAAK,EAAEW,GAAG,CAACZ,IAAJ,CAASC,KAFJ;AAGZC,UAAAA,OAAO,EAAE;AAHG,SAAd;AAKD,OAZD;AAaD,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAiCD;;AAED,eAAeX,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport CourseList from \"../components/CourseList\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses } from \"../actions/courseActions\";\nimport ReactTable from \"react-table\";\n\nfunction CoursePage() {\n  const [courses, setCourses] = useState(courseStore.getCourse());\n\n  useEffect(() => {\n    courseStore.addChangeListner(onChange);\n    if (courseStore.getCourse().length === 0) loadCourses();\n    return () => courseStore.removeChangeListner(onChange); //cleanup on unmount\n  }, []);\n\n  function onChange() {\n    setCourses(courseStore.getCourse());\n  }\n\n  return (\n    <>\n      <h3>Courses</h3>\n      <Link className=\"btn btn-primary\" to=\"/course\">\n        Add Course\n      </Link>\n      <CourseList courses={courses} />\n      <ReactTable\n        data={this.state.data} // should default to []\n        pages={this.state.pages} // should default to -1 (which means we don't know how many pages we have)\n        loading={this.state.loading}\n        manual // informs React Table that you'll be handling sorting and pagination server-side\n        onFetchData={(state, instance) => {\n          // show the loading overlay\n          this.setState({ loading: true });\n          // fetch your data\n          Axios.post(\"mysite.com/data\", {\n            page: state.page,\n            pageSize: state.pageSize,\n            sorted: state.sorted,\n            filtered: state.filtered,\n          }).then((res) => {\n            // Update react-table\n            this.setState({\n              data: res.data.rows,\n              pages: res.data.pages,\n              loading: false,\n            });\n          });\n        }}\n      />\n    </>\n  );\n}\n\nexport default CoursePage;\n"]},"metadata":{},"sourceType":"module"}