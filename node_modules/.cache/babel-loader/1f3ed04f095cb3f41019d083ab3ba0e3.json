{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/common/Table.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable, useBlockLayout } from 'react-table';\nimport { FixedSizeList } from 'react-window';\nconst Styles = styled.div`\n  padding: 1rem;\n  .table {\n    display: inline-block;\n    border-spacing: 0;\n    border: 1px solid black;\n    .tr {\n      :last-child {\n        .td {\n          border-bottom: 0;\n        }\n      }\n    }\n    .th,\n    .td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nfunction Table({\n  columns,\n  data\n}) {\n  // Use the state and functions returned from useTable to build your UI\n  const defaultColumn = React.useMemo(() => ({\n    width: 150\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    totalColumnsWidth,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    defaultColumn\n  }, useBlockLayout);\n  const RenderRow = React.useCallback(({\n    index,\n    style\n  }) => {\n    const row = rows[index];\n    prepareRow(row);\n    return React.createElement(\"div\", Object.assign({}, row.getRowProps({\n      style\n    }), {\n      className: \"tr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"div\", Object.assign({}, cell.getCellProps(), {\n        className: \"td\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  }, [prepareRow, rows]); // Render the UI for your table\n\n  return React.createElement(\"div\", Object.assign({}, getTableProps(), {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"div\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    className: \"tr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), headerGroup.headers.map(column => React.createElement(\"div\", Object.assign({}, column.getHeaderProps(), {\n    className: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), column.render('Header')))))), React.createElement(\"div\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(FixedSizeList, {\n    height: 400,\n    itemCount: rows.length,\n    itemSize: 35,\n    width: totalColumnsWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, RenderRow)));\n}\n\nfunction TableR(props) {\n  const columns = React.useMemo(() => [{\n    Header: 'Row Index',\n    accessor: (row, i) => i\n  }, {\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age',\n      width: 50\n    }, {\n      Header: 'Visits',\n      accessor: 'visits',\n      width: 60\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = props.data;\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: columns,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }));\n}\n\nexport default TableR;","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/common/Table.js"],"names":["React","styled","useTable","useBlockLayout","FixedSizeList","Styles","div","Table","columns","data","defaultColumn","useMemo","width","getTableProps","getTableBodyProps","headerGroups","rows","totalColumnsWidth","prepareRow","RenderRow","useCallback","index","style","row","getRowProps","cells","map","cell","getCellProps","render","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","length","TableR","props","Header","accessor","i"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useTable, useBlockLayout } from 'react-table'\nimport { FixedSizeList } from 'react-window'\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n  .table {\n    display: inline-block;\n    border-spacing: 0;\n    border: 1px solid black;\n    .tr {\n      :last-child {\n        .td {\n          border-bottom: 0;\n        }\n      }\n    }\n    .th,\n    .td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      width: 150,\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    totalColumnsWidth,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n    },\n    useBlockLayout\n  )\n\n  const RenderRow = React.useCallback(\n    ({ index, style }) => {\n      const row = rows[index]\n      prepareRow(row)\n      return (\n        <div\n          {...row.getRowProps({\n            style,\n          })}\n          className=\"tr\"\n        >\n          {row.cells.map(cell => {\n            return (\n              <div {...cell.getCellProps()} className=\"td\">\n                {cell.render('Cell')}\n              </div>\n            )\n          })}\n        </div>\n      )\n    },\n    [prepareRow, rows]\n  )\n\n  // Render the UI for your table\n  return (\n    <div {...getTableProps()} className=\"table\">\n      <div>\n        {headerGroups.map(headerGroup => (\n          <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\n            {headerGroup.headers.map(column => (\n              <div {...column.getHeaderProps()} className=\"th\">\n                {column.render('Header')}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <div {...getTableBodyProps()}>\n        <FixedSizeList\n          height={400}\n          itemCount={rows.length}\n          itemSize={35}\n          width={totalColumnsWidth}\n        >\n          {RenderRow}\n        </FixedSizeList>\n      </div>\n    </div>\n  )\n}\n\nfunction TableR(props) {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Row Index',\n        accessor: (row, i) => i,\n      },\n      {\n        Header: 'Name',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n        ],\n      },\n      {\n        Header: 'Info',\n        columns: [\n          {\n            Header: 'Age',\n            accessor: 'age',\n            width: 50,\n          },\n          {\n            Header: 'Visits',\n            accessor: 'visits',\n            width: 60,\n          },\n          {\n            Header: 'Status',\n            accessor: 'status',\n          },\n          {\n            Header: 'Profile Progress',\n            accessor: 'progress',\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n  const data = props.data\n\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  )\n}\n\nexport default TableR\n\n"]},"metadata":{},"sourceType":"module"}