{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/components/CourseList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; //import { Link } from \"react-router-dom\";\n\nfunction CourseList(props) {\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Author Id\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Category\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.courses.map(course => {\n    return React.createElement(\"tr\", {\n      key: course.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, course.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, course.authorId), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, course.category));\n  })));\n}\n\nCourseList.propType = {\n  courses: PropTypes.array.isRequired\n};\n/*\nCourseList.propType = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        authorId: PropTypes.number.isRequired,\n        category: PropTypes.string.isRequired\n      }.isRequired\n    )\n  )\n};\nCourseList.defaultProps = {\n  courses: []\n};\n*/\n\nexport default CourseList;","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/components/CourseList.js"],"names":["React","PropTypes","CourseList","props","courses","map","course","id","title","authorId","category","propType","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADA,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IAAG;AACxB,WACI;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,KAAZ,CADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,QAAZ,CAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,MAAM,CAACI,QAAZ,CAHL,CADJ;AAME,GAPL,CADL,CATJ,CADF;AAwBD;;AACDR,UAAU,CAACS,QAAX,GAAqB;AACnBP,EAAAA,OAAO,EAAGH,SAAS,CAACW,KAAV,CAAgBC;AADP,CAArB;AAGA;;;;;;;;;;;;;;;;;;AAiBA,eAAeX,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n//import { Link } from \"react-router-dom\";\nfunction CourseList(props) {\n  return (\n    <table className=\"table\">\n    <thead>\n        <tr>\n            <th>Title</th>\n            <th>Author Id</th>\n            <th>Category</th>\n            \n        </tr>\n        </thead>\n        <tbody>\n            {props.courses.map(course =>{\n                return(\n                    <tr key={course.id}>\n                         <td>{course.title}</td>\n                         <td>{course.authorId}</td>\n                         <td>{course.category}</td>\n                     </tr>\n                )}\n            )}\n        </tbody>\n    \n</table>\n  );\n}\nCourseList.propType ={\n  courses : PropTypes.array.isRequired\n}\n/*\nCourseList.propType = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        authorId: PropTypes.number.isRequired,\n        category: PropTypes.string.isRequired\n      }.isRequired\n    )\n  )\n};\nCourseList.defaultProps = {\n  courses: []\n};\n*/\nexport default CourseList;\n"]},"metadata":{},"sourceType":"module"}