{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionType from \"../actions/actionTypes\";\nimport { StringDecoder } from \"string_decoder\";\nconst CHANGE_EVENT = \"change\";\nlet _courses = [];\n\nclass CourseStore extends EventEmitter {\n  addChangeListner(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListner(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  getCourse() {\n    return _courses;\n  }\n\n  getCourseBySlug(slug) {\n    return _courses.find(course => course.slug === slug);\n  }\n\n}\n\nconst store = new CourseStore();\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionType.CREATE_COURSE:\n      _courses.push(action.course);\n\n      store.emitChange();\n      break;\n\n    case action.actionType:\n      _courses = action.courses;\n      StringDecoder.emitChange();\n      break;\n\n    default: // do nothing\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/stores/courseStore.js"],"names":["EventEmitter","Dispatcher","actionType","StringDecoder","CHANGE_EVENT","_courses","CourseStore","addChangeListner","callback","on","removeChangeListner","removeListener","emitChange","emit","getCourse","getCourseBySlug","slug","find","course","store","register","action","CREATE_COURSE","push","courses"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,MAAMC,YAAY,GAAG,QAArB;AACA,IAAIC,QAAQ,GAAG,EAAf;;AACA,MAAMC,WAAN,SAA0BN,YAA1B,CAAuC;AACrCO,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACzB,SAAKC,EAAL,CAAQL,YAAR,EAAsBI,QAAtB;AACD;;AACDE,EAAAA,mBAAmB,CAACF,QAAD,EAAW;AAC5B,SAAKG,cAAL,CAAoBP,YAApB,EAAkCI,QAAlC;AACD;;AACDI,EAAAA,UAAU,GAAG;AACX,SAAKC,IAAL,CAAUT,YAAV;AACD;;AACDU,EAAAA,SAAS,GAAG;AACV,WAAOT,QAAP;AACD;;AACDU,EAAAA,eAAe,CAACC,IAAD,EAAO;AACpB,WAAOX,QAAQ,CAACY,IAAT,CAAeC,MAAD,IAAYA,MAAM,CAACF,IAAP,KAAgBA,IAA1C,CAAP;AACD;;AAfoC;;AAiBvC,MAAMG,KAAK,GAAG,IAAIb,WAAJ,EAAd;AACAL,UAAU,CAACmB,QAAX,CAAqBC,MAAD,IAAY;AAC9B,UAAQA,MAAM,CAACnB,UAAf;AACE,SAAKA,UAAU,CAACoB,aAAhB;AACEjB,MAAAA,QAAQ,CAACkB,IAAT,CAAcF,MAAM,CAACH,MAArB;;AACAC,MAAAA,KAAK,CAACP,UAAN;AACA;;AACF,SAAMS,MAAM,CAACnB,UAAb;AACEG,MAAAA,QAAQ,GAAGgB,MAAM,CAACG,OAAlB;AACArB,MAAAA,aAAa,CAACS,UAAd;AACA;;AAEF,YAVF,CAWE;;AAXF;AAaD,CAdD;AAeA,eAAeO,KAAf","sourcesContent":["import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionType from \"../actions/actionTypes\";\nimport { StringDecoder } from \"string_decoder\";\n\nconst CHANGE_EVENT = \"change\";\nlet _courses = [];\nclass CourseStore extends EventEmitter {\n  addChangeListner(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n  removeChangeListner(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n  getCourse() {\n    return _courses;\n  }\n  getCourseBySlug(slug) {\n    return _courses.find((course) => course.slug === slug);\n  }\n}\nconst store = new CourseStore();\nDispatcher.register((action) => {\n  switch (action.actionType) {\n    case actionType.CREATE_COURSE:\n      _courses.push(action.course);\n      store.emitChange();\n      break;\n    case (action.actionType) :\n      _courses = action.courses\n      StringDecoder.emitChange()\n      break\n    \n    default:\n    // do nothing\n  }\n});\nexport default store;\n"]},"metadata":{},"sourceType":"module"}