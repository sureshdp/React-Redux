{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/common/AutoComplete.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class AutoComplete extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: ''\n    };\n\n    this.onChange = e => {\n      console.log('onChanges');\n      const {\n        options\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredOptions = options.filter(optionName => optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeOption: 0,\n        filteredOptions,\n        showOptions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeOption: 0,\n        filteredOptions: [],\n        showOptions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeOption,\n        filteredOptions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeOption: 0,\n          showOptions: false,\n          userInput: filteredOptions[activeOption]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeOption === 0) {\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption - 1\n        });\n      } else if (e.keyCode === 40) {\n        if (activeOption === filteredOptions.length - 1) {\n          console.log(activeOption);\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption + 1\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeOption,\n        filteredOptions,\n        showOptions,\n        userInput\n      }\n    } = this;\n    let optionList;\n\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = React.createElement(\"ul\", {\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, filteredOptions.map((optionName, index) => {\n          let className;\n\n          if (index === activeOption) {\n            className = 'form-control';\n          }\n\n          return React.createElement(\"option\", {\n            className: className,\n            value: optionName,\n            onClick: onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, optionName);\n        }));\n      } else {\n        optionList = React.createElement(\"div\", {\n          className: \"no-options\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"No Option!\"));\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"search-box\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), optionList);\n  }\n\n}\nAutoComplete.propTypes = {\n  options: PropTypes.instanceOf(Array).isRequired\n};\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/common/AutoComplete.js"],"names":["React","Component","PropTypes","AutoComplete","state","activeOption","filteredOptions","showOptions","userInput","onChange","e","console","log","options","props","currentTarget","value","filter","optionName","toLowerCase","indexOf","setState","onClick","innerText","onKeyDown","keyCode","length","render","optionList","map","index","className","propTypes","instanceOf","Array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AutoComplete extends Component {\n  static propTypes = {\n    options: PropTypes.instanceOf(Array).isRequired\n  };\n  state = {\n    activeOption: 0,\n    filteredOptions: [],\n    showOptions: false,\n    userInput: ''\n  };\n\n  onChange = (e) => {\n    console.log('onChanges');\n\n    const { options } = this.props;\n    const userInput = e.currentTarget.value;\n\n    const filteredOptions = options.filter(\n      (optionName) =>\n        optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeOption: 0,\n      filteredOptions,\n      showOptions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n  onClick = (e) => {\n    this.setState({\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n  onKeyDown = (e) => {\n    const { activeOption, filteredOptions } = this.state;\n\n    if (e.keyCode === 13) {\n      this.setState({\n        activeOption: 0,\n        showOptions: false,\n        userInput: filteredOptions[activeOption]\n      });\n    } else if (e.keyCode === 38) {\n      if (activeOption === 0) {\n        return;\n      }\n      this.setState({ activeOption: activeOption - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeOption === filteredOptions.length - 1) {\n        console.log(activeOption);\n        return;\n      }\n      this.setState({ activeOption: activeOption + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n\n      state: { activeOption, filteredOptions, showOptions, userInput }\n    } = this;\n    let optionList;\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = (\n          <ul className=\"form-control\">\n            {filteredOptions.map((optionName, index) => {\n              let className;\n              if (index === activeOption) {\n                className = 'form-control';\n              }\n              return (\n                <option className={className} value={optionName} onClick={onClick}>\n                  {optionName}\n                </option>\n              );\n            })}\n          </ul>\n        );\n      } else {\n        optionList = (\n          <div className=\"no-options\">\n            <em>No Option!</em>\n          </div>\n        );\n      }\n    }\n    return (\n      <React.Fragment>\n        <div className=\"search\">\n          <select\n            \n            className=\"search-box\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n          <input type=\"submit\" value=\"\" className=\"btn btn-primary\" />\n        </div>\n        {optionList}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AutoComplete;"]},"metadata":{},"sourceType":"module"}