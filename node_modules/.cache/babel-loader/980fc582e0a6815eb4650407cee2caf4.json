{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/common/Table.js\";\nimport React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useTable } from \"react-table\";\n/**\n * As in the previous versions, a react-table accepts colums where at the core we have a field Header, and accessor\n * As in the previous versions, a react-table has data that consist of an array of JSONs\n */\n\nconst ReactTable = ({\n  columns,\n  data\n}) => {\n  // you can get the react table functions by using the hook useTable\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return React.createElement(Table, Object.assign({\n    bordered: true\n  }, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), headerGroup.headers.map(column => {\n    const {\n      render,\n      getHeaderProps\n    } = column;\n    return React.createElement(\"th\", Object.assign({}, getHeaderProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), render(\"Header\"));\n  })))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), cell.render(\"Cell\"));\n    }));\n  })));\n};\n\nexport default ReactTable;","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/common/Table.js"],"names":["React","Table","useTable","ReactTable","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","render","getHeaderProps","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA;;;;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACxC;AACA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFR,QAAQ,CAAC;AACXE,IAAAA,OADW;AAEXC,IAAAA;AAFW,GAAD,CANZ;AAUA,SACE,oBAAC,KAAD;AAAO,IAAA,QAAQ;AAAf,KAAoBC,aAAa,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACG,GAAb,CAAiBC,WAAW,IAC3B,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,IAAI;AACjC,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAA2BF,MAAjC;AACA,WACE,4CAAQE,cAAc,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA2BD,MAAM,CAAC,QAAD,CAAjC,CADF;AAGD,GALA,CADH,CADD,CADH,CADF,EAaE,+CAAWT,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AACpBT,IAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,WACE,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAcW,IAAI,IAAI;AACrB,aAAO,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACN,MAAL,CAAY,MAAZ,CAA9B,CAAP;AACD,KAFA,CADH,CADF;AAOD,GATA,CADH,CAbF,CADF;AA4BD,CAxCD;;AA0CA,eAAeb,UAAf","sourcesContent":["import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useTable } from \"react-table\";\n/**\n * As in the previous versions, a react-table accepts colums where at the core we have a field Header, and accessor\n * As in the previous versions, a react-table has data that consist of an array of JSONs\n */\nconst ReactTable = ({ columns, data }) => {\n  // you can get the react table functions by using the hook useTable\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return (\n    <Table bordered {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => {\n              const {render, getHeaderProps} = column\n              return (\n                <th {...getHeaderProps()}>{render(\"Header\")}</th>\n              )\n            })}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default ReactTable;"]},"metadata":{},"sourceType":"module"}