{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/ManageCoursePage.js\";\nimport React, { useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport CourseForm from \"./components/CourseForm\";\nimport * as CourseAPI from \"./api/courseApi\";\nimport { toast } from \"react-toastify\";\n\nconst ManageCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    category: \"\",\n    authorId: null\n  });\n\n  function handleChange(event) {\n    setCourse({ ...course,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid) return;\n    CourseAPI.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Saved...\");\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is Required\";\n    if (!course.authorId) _errors.authodId = \"Author is Required\";\n    if (!course.category) _errors.category = \"Category is Required\";\n    setErrors(_errors); //Forrm is valid if errors object has no properties\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    course: course,\n    errors: errors,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage; //      <Prompt when={true} message=\"Are you sure to Leave ?\" />\n//<Prompt when={true} message=\"Are you sure you want to leave ?\" />","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/ManageCoursePage.js"],"names":["React","useState","Prompt","CourseForm","CourseAPI","toast","ManageCoursePage","props","errors","setErrors","course","setCourse","id","slug","title","category","authorId","handleChange","event","target","name","value","handleSubmit","preventDefault","formIsValid","saveCourse","then","history","push","success","_errors","authodId","Object","keys","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,iBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC;AACnCW,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,QAAQ,EAAE,EAJyB;AAKnCC,IAAAA,QAAQ,EAAE;AALyB,GAAD,CAApC;;AAOA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BP,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF1B,KAAD,CAAT;AAID;;AACD,WAASC,YAAT,CAAsBJ,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAI,CAACC,WAAL,EAAkB;AAClBpB,IAAAA,SAAS,CAACqB,UAAV,CAAqBf,MAArB,EAA6BgB,IAA7B,CAAkC,MAAM;AACtCnB,MAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACAvB,MAAAA,KAAK,CAACwB,OAAN,CAAc,UAAd;AACD,KAHD;AAID;;AACD,WAASL,WAAT,GAAuB;AACrB,UAAMM,OAAO,GAAG,EAAhB;AACA,QAAI,CAACpB,MAAM,CAACI,KAAZ,EAAmBgB,OAAO,CAAChB,KAAR,GAAgB,mBAAhB;AACnB,QAAI,CAACJ,MAAM,CAACM,QAAZ,EAAsBc,OAAO,CAACC,QAAR,GAAmB,oBAAnB;AACtB,QAAI,CAACrB,MAAM,CAACK,QAAZ,EAAsBe,OAAO,CAACf,QAAR,GAAmB,sBAAnB;AACtBN,IAAAA,SAAS,CAACqB,OAAD,CAAT,CALqB,CAMrB;;AACA,WAAOE,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,MAArB,KAAgC,CAAvC;AACD;;AACD,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAExB,MADV;AAEE,IAAA,MAAM,EAAEF,MAFV;AAGE,IAAA,QAAQ,EAAES,YAHZ;AAIE,IAAA,QAAQ,EAAEK,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD,CA3CD;;AA6CA,eAAehB,gBAAf,C,CACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport CourseForm from \"./components/CourseForm\";\nimport * as CourseAPI from \"./api/courseApi\";\nimport { toast } from \"react-toastify\";\nconst ManageCoursePage = (props) => {\n  const [errors, setErrors] = useState({});\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    category: \"\",\n    authorId: null,\n  });\n  function handleChange(event) {\n    setCourse({\n      ...course,\n      [event.target.name]: event.target.value,\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid) return;\n    CourseAPI.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Saved...\");\n    });\n  }\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is Required\";\n    if (!course.authorId) _errors.authodId = \"Author is Required\";\n    if (!course.category) _errors.category = \"Category is Required\";\n    setErrors(_errors);\n    //Forrm is valid if errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n  return (\n    <>\n      <h2>Manage Course</h2>\n      <CourseForm\n        course={course}\n        errors={errors}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManageCoursePage;\n//      <Prompt when={true} message=\"Are you sure to Leave ?\" />\n//<Prompt when={true} message=\"Are you sure you want to leave ?\" />\n"]},"metadata":{},"sourceType":"module"}