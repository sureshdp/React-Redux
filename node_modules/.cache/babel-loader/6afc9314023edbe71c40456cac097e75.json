{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/components/CourseList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ReactTable from \"react-table\";\n\nfunction CourseList(props) {\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Author ID\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Category\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"//---------Autho\", React.createElement(ReactTable, {\n    data: this.state.data // should default to []\n    ,\n    pages: this.state.pages // should default to -1 (which means we don't know how many pages we have)\n    ,\n    loading: this.state.loading,\n    manual: true // informs React Table that you'll be handling sorting and pagination server-side\n    ,\n    onFetchData: (state, instance) => {\n      // show the loading overlay\n      this.setState({\n        loading: true\n      }); // fetch your data\n      // Update react-table\n\n      this.setState({\n        data: props.courses,\n        pages: 1,\n        loading: false\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \"//------------\", props.courses.map(course => {\n    return React.createElement(\"tr\", {\n      key: course.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Course/\" + course.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, course.title)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, course.authorId), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, course.category));\n  })));\n}\n\nCourseList.defaultProps = {\n  courses: []\n};\nCourseList.propTypes = {\n  courses: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    authorId: PropTypes.number.isRequired,\n    category: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default CourseList;","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/components/CourseList.js"],"names":["React","PropTypes","Link","ReactTable","CourseList","props","state","data","pages","loading","instance","setState","courses","map","course","id","slug","title","authorId","category","defaultProps","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IADnB,CACyB;AADzB;AAEE,IAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB,CAE2B;AAF3B;AAGE,IAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAHtB;AAIE,IAAA,MAAM,MAJR,CAIS;AAJT;AAKE,IAAA,WAAW,EAAE,CAACH,KAAD,EAAQI,QAAR,KAAqB;AAChC;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd,EAFgC,CAGhC;AAEA;;AACA,WAAKE,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEF,KAAK,CAACO,OADA;AAEZJ,QAAAA,KAAK,EAAE,CAFK;AAGZC,QAAAA,OAAO,EAAE;AAHG,OAAd;AAKD,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,oBAqBGJ,KAAK,CAACO,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAC7B,WACE;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,aAAaD,MAAM,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCF,MAAM,CAACG,KAA5C,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,MAAM,CAACI,QAAZ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,MAAM,CAACK,QAAZ,CALF,CADF;AASD,GAVA,CArBH,CARF,CADF;AA4CD;;AACDf,UAAU,CAACgB,YAAX,GAA0B;AACxBR,EAAAA,OAAO,EAAE;AADe,CAA1B;AAGAR,UAAU,CAACiB,SAAX,GAAuB;AACrBT,EAAAA,OAAO,EAAEX,SAAS,CAACqB,OAAV,CACPrB,SAAS,CAACsB,KAAV,CAAgB;AACdR,IAAAA,EAAE,EAAEd,SAAS,CAACuB,MAAV,CAAiBC,UADP;AAEdR,IAAAA,KAAK,EAAEhB,SAAS,CAACyB,MAAV,CAAiBD,UAFV;AAGdP,IAAAA,QAAQ,EAAEjB,SAAS,CAACuB,MAAV,CAAiBC,UAHb;AAIdN,IAAAA,QAAQ,EAAElB,SAAS,CAACyB,MAAV,CAAiBD;AAJb,GAAhB,CADO,EAOPA;AARmB,CAAvB;AAWA,eAAerB,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ReactTable from \"react-table\";\n\nfunction CourseList(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author ID</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        //---------Autho\n        <ReactTable\n          data={this.state.data} // should default to []\n          pages={this.state.pages} // should default to -1 (which means we don't know how many pages we have)\n          loading={this.state.loading}\n          manual // informs React Table that you'll be handling sorting and pagination server-side\n          onFetchData={(state, instance) => {\n            // show the loading overlay\n            this.setState({ loading: true });\n            // fetch your data\n\n            // Update react-table\n            this.setState({\n              data: props.courses,\n              pages: 1,\n              loading: false,\n            });\n          }}\n        />\n        //------------\n        {props.courses.map((course) => {\n          return (\n            <tr key={course.id}>\n              <td>\n                <Link to={\"/Course/\" + course.slug}>{course.title}</Link>\n              </td>\n              <td>{course.authorId}</td>\n              <td>{course.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\nCourseList.defaultProps = {\n  courses: [],\n};\nCourseList.propTypes = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      authorId: PropTypes.number.isRequired,\n      category: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default CourseList;\n"]},"metadata":{},"sourceType":"module"}