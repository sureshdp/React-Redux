{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/common/Table.js\";\n\n() => {\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    style: {\n      border: 'solid 1px blue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), headerGroup.headers.map(column => React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    style: {\n      borderBottom: 'solid 3px red',\n      background: 'aliceblue',\n      color: 'black',\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), column.render('Header')))))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), rows.map(row => {\n    prepareRow(row);\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        style: {\n          padding: '10px',\n          border: 'solid 1px gray',\n          background: 'papayawhip'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  })));\n};","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/common/Table.js"],"names":["data","React","useMemo","col1","col2","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":";;AAAA,MAAM;AACF,QAAMA,IAAI,GAAGC,KAAK,CAACC,OAAN,CACX,MAAM,CACJ;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADI,EAKJ;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALI,EASJ;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATI,CADK,EAeX,EAfW,CAAb;AAiBA,QAAMC,OAAO,GAAGJ,KAAK,CAACC,OAAN,CACd,MAAM,CACJ;AACEI,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE,MAFZ,CAEoB;;AAFpB,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,CADQ,EAWd,EAXc,CAAhB;AAaA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFC,QAAQ,CAAC;AAAER,IAAAA,OAAF;AAAWL,IAAAA;AAAX,GAAD,CANZ;AAOA,SACE,+CAAWQ,aAAa,EAAxB;AAA4B,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,YAAY,CAACK,GAAb,CAAiBC,WAAW,IAC3B,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,IAC7B,4CACMA,MAAM,CAACC,cAAP,EADN;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAE,eADT;AAELC,MAAAA,UAAU,EAAE,WAFP;AAGLC,MAAAA,KAAK,EAAE,OAHF;AAILC,MAAAA,UAAU,EAAE;AAJP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASGL,MAAM,CAACM,MAAP,CAAc,QAAd,CATH,CADD,CADH,CADD,CADH,CADF,EAoBE,+CAAWhB,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACI,GAAL,CAASW,GAAG,IAAI;AACfd,IAAAA,UAAU,CAACc,GAAD,CAAV;AACA,WACE,4CAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGD,GAAG,CAACE,KAAJ,CAAUb,GAAV,CAAcc,IAAI,IAAI;AACrB,aACE,4CACMA,IAAI,CAACC,YAAL,EADN;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,MADJ;AAELjB,UAAAA,MAAM,EAAE,gBAFH;AAGLQ,UAAAA,UAAU,EAAE;AAHP,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQGO,IAAI,CAACJ,MAAL,CAAY,MAAZ,CARH,CADF;AAYD,KAbA,CADH,CADF;AAkBD,GApBA,CADH,CApBF,CADF;AA8CD,CApFH","sourcesContent":["() => {\n    const data = React.useMemo(\n      () => [\n        {\n          col1: 'Hello',\n          col2: 'World',\n        },\n        {\n          col1: 'react-table',\n          col2: 'rocks',\n        },\n        {\n          col1: 'whatever',\n          col2: 'you want',\n        },\n      ],\n      [],\n    )\n    const columns = React.useMemo(\n      () => [\n        {\n          Header: 'Column 1',\n          accessor: 'col1', // accessor is the \"key\" in the data\n        },\n        {\n          Header: 'Column 2',\n          accessor: 'col2',\n        },\n      ],\n      [],\n    )\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n    } = useTable({ columns, data })\n    return (\n      <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  {...column.getHeaderProps()}\n                  style={{\n                    borderBottom: 'solid 3px red',\n                    background: 'aliceblue',\n                    color: 'black',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        padding: '10px',\n                        border: 'solid 1px gray',\n                        background: 'papayawhip',\n                      }}\n                    >\n                      {cell.render('Cell')}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    )\n  }"]},"metadata":{},"sourceType":"module"}