{"ast":null,"code":"var _jsxFileName = \"/Users/dsuresh/LearnReact/ps-flux/src/ManageCoursePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport CourseForm from \"./components/CourseForm\";\nimport courseStore from \"./stores/courseStore\";\nimport * as CourseActions from \"./actions/courseActions\";\nimport { toast } from \"react-toastify\";\n\nconst ManageCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    category: \"\",\n    authorId: null\n  });\n  useEffect(() => {\n    const slug = props.match.params.slug; // from the path '/couses/:slug'\n\n    if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange(event) {\n    setCourse({ ...course,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is Required\";\n    if (!course.authorId) _errors.authorId = \"Author is Required\";\n    if (!course.category) _errors.category = \"Category is Required\";\n    setErrors(_errors); //Form is valid if errors object has no properties\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    CourseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Saved...\");\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    errors: errors,\n    course: course,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage; //      <Prompt when={true} message=\"Are you sure to Leave ?\" />\n//<Prompt when={true} message=\"Are you sure you want to leave ?\" />","map":{"version":3,"sources":["/Users/dsuresh/LearnReact/ps-flux/src/ManageCoursePage.js"],"names":["React","useState","useEffect","Prompt","CourseForm","courseStore","CourseActions","toast","ManageCoursePage","props","errors","setErrors","course","setCourse","id","slug","title","category","authorId","match","params","getCourseBySlug","handleChange","event","target","name","value","formIsValid","_errors","Object","keys","length","handleSubmit","preventDefault","saveCourse","then","history","push","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,yBAA/B;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC;AACnCa,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,QAAQ,EAAE,EAJyB;AAKnCC,IAAAA,QAAQ,EAAE;AALyB,GAAD,CAApC;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,IAAI,GAAGN,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBL,IAAhC,CADc,CACwB;;AACtC,QAAIA,IAAJ,EAAU;AACRF,MAAAA,SAAS,CAACR,WAAW,CAACgB,eAAZ,CAA4BN,IAA5B,CAAD,CAAT;AACD;AACF,GALQ,EAKN,CAACN,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBL,IAApB,CALM,CAAT;;AAMA,WAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BV,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF1B,KAAD,CAAT;AAID;;AAED,WAASC,WAAT,GAAuB;AACrB,UAAMC,OAAO,GAAG,EAAhB;AACA,QAAI,CAAChB,MAAM,CAACI,KAAZ,EAAmBY,OAAO,CAACZ,KAAR,GAAgB,mBAAhB;AACnB,QAAI,CAACJ,MAAM,CAACM,QAAZ,EAAsBU,OAAO,CAACV,QAAR,GAAmB,oBAAnB;AACtB,QAAI,CAACN,MAAM,CAACK,QAAZ,EAAsBW,OAAO,CAACX,QAAR,GAAmB,sBAAnB;AACtBN,IAAAA,SAAS,CAACiB,OAAD,CAAT,CALqB,CAMrB;;AACA,WAAOC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,KAAgC,CAAvC;AACD;;AACD,WAASC,YAAT,CAAsBT,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACU,cAAN;AACA,QAAI,CAACN,WAAW,EAAhB,EAAoB;AACpBrB,IAAAA,aAAa,CAAC4B,UAAd,CAAyBtB,MAAzB,EAAiCuB,IAAjC,CAAsC,MAAM;AAC1C1B,MAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACA9B,MAAAA,KAAK,CAAC+B,OAAN,CAAc,UAAd;AACD,KAHD;AAID;;AACD,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAE5B,MADV;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,QAAQ,EAAEU,YAHZ;AAIE,IAAA,QAAQ,EAAEU,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD,CAlDD;;AAoDA,eAAexB,gBAAf,C,CACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport CourseForm from \"./components/CourseForm\";\nimport courseStore from \"./stores/courseStore\";\nimport * as CourseActions from \"./actions/courseActions\";\n\nimport { toast } from \"react-toastify\";\nconst ManageCoursePage = (props) => {\n  const [errors, setErrors] = useState({});\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    category: \"\",\n    authorId: null,\n  });\n  useEffect(() => {\n    const slug = props.match.params.slug; // from the path '/couses/:slug'\n    if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n  }, [props.match.params.slug]);\n  function handleChange(event) {\n    setCourse({\n      ...course,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is Required\";\n    if (!course.authorId) _errors.authorId = \"Author is Required\";\n    if (!course.category) _errors.category = \"Category is Required\";\n    setErrors(_errors);\n    //Form is valid if errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    CourseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Saved...\");\n    });\n  }\n  return (\n    <>\n      <h2>Manage Course</h2>\n      <CourseForm\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManageCoursePage;\n//      <Prompt when={true} message=\"Are you sure to Leave ?\" />\n//<Prompt when={true} message=\"Are you sure you want to leave ?\" />\n"]},"metadata":{},"sourceType":"module"}